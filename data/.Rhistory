plot.margin = unit(c(.5, .5, 1, 0), "cm")
)
ggsave("./output/figures/figure_4.png", figure_4)
# Comparisons between different codings for the 6 countries
comparison <-
all_coefs %>%
filter(
!str_detect(policy, "no_policy"),
!adm0 %in% c("SWE", "GER", "ESP", "UK", "NL"),
!str_detect(policy, "comparator")
) %>%
separate(policy, into = c("policy", "encoding"), sep = " - ", extra = "merge", fill = "right") %>%
replace_na(list(encoding = "1-0 coded")) %>%
mutate(
policy = str_replace(policy, "combined policy", "All policies combined"),
encoding =
recode(
encoding,
"orig" = "original"
) %>%
fct_rev(),
index = -row_number(),
policy = fct_reorder(policy, index) %>% relevel("All policies combined")
)
figure_5 <-
comparison %>%
ggplot(
aes(
x = beta,
xmin = lb,
xmax = ub,
y = policy,
color = (ub < 0 & lb< 0) | (ub > 0 & lb > 0)
)
) +
geom_point() +
geom_errorbarh(height = .1) +
geom_vline(xintercept = 0, color = "black") +
facet_grid(country ~ encoding, scales = "free", space = "free", drop = TRUE) +
scale_y_discrete(
breaks = levels(comparison$policy),
labels = c(expression(bold("All policies combined")),
levels(comparison$policy)[2:18])
) +
scale_color_discrete(name = "", labels = c("not significant", "significant")) +
labs(
x = "Estimated effect on daily growth rate",
y = ""
) +
coord_cartesian(xlim = c(-.62, 1))+
scale_x_continuous(breaks = c(-.4, -.2, 0, .2, .40)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6, hjust = .41),
strip.text.x = element_text(angle = 0, size = 6, hjust = 0.37),
strip.text.y = element_text(angle = 0, size = 6, hjust = 0),
legend.direction = "horizontal",
legend.text = element_text(size = 6),
legend.position = c(.425, -.08),
plot.margin = unit(c(.5, .5 , 1, 0), "cm")
)
ggsave("./output/figures/figure_5.png", figure_5)
map(path_policy_files, ~dir(path = ".", pattern = .)) %>%
flatten_chr()
map(path_policy_files, ~dir(path = path_temp, pattern = .)) %>%
flatten_chr()
install.packages("Rstata")
install.packages("RStata")
getwd()
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source("script/npi_processing.R")
# Analysis ===================================================================
RStata::stata(
"script/master_pt1.do",
#stata.path = "\"A:\\Stata\\Stata15_MP\\StataMP-64\"",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
"script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
?RStata::stata
getwd
getwd()
# Analysis ===================================================================
RStata::stata(
src = "/Users/seungwonho/Dropbox/covid_npi_analysis/datascript/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/StataMP",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/StataMP",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do"
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
#stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
#stata.echo = TRUE
)
# Analysis ===================================================================
RStata::stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
#stata.echo = TRUE
)
library(RStata)
# Analysis ===================================================================
stata(
src = "master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
#stata.echo = TRUE
)
getwd()
# Analysis ===================================================================
stata(
src = "/Users/seungwonho/Dropbox/covid_npi_analysis/script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
#stata.echo = TRUE
)
setwd("/Users/seungwonho/Dropbox/covid_npi_analysis/")
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source("script/npi_processing.R")
# Analysis ===================================================================
stata(
src = "script/master_pt1.do",
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script"
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script/"
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source("pairing_countries.R")
setwd("/Users/seungwonho/Dropbox/covid_npi_analysis/script")
# Get the comparison countries paired with the reference countries (SWE, KOR)
source("pairing_countries.R")
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
# Collect regression results and plot
source("npi_figures.R")
getwd()
library(Rstata)
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script/"
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
library(Rstata)
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script/"
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16,
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
setwd("/Users/seungwonho/Dropbox/covid_npi_analysis/")
# List of countries
country_list <- c("FRA", "GER", "IRN", "ITA", "NL", "ESP", "UK", "USA", "KOR", "SWE")
# Collect coefficients datasets for each country
collect_coefs <- function(country) {
read_csv(str_c("./output/regression/", country, "_forest_coefs_1.csv")) %>%
bind_rows(
read_csv(str_c("./output/regression/", country, "_forest_coefs_2.csv"))
) %>%
write_csv(str_c("./output/figures/", country, "_forest_coefs.csv"))
}
country_list[!country_list %in% c("KOR", "SWE")] %>%
walk(collect_coefs)
setwd("/Users/seungwonho/Dropbox/covid_npi_analysis")
# List of countries
country_list <- c("FRA", "GER", "IRN", "ITA", "NL", "ESP", "UK", "USA", "KOR", "SWE")
# Collect coefficients datasets for each country
collect_coefs <- function(country) {
read_csv(str_c("./output/regression/", country, "_forest_coefs_1.csv")) %>%
bind_rows(
read_csv(str_c("./output/regression/", country, "_forest_coefs_2.csv"))
) %>%
write_csv(str_c("./output/figures/", country, "_forest_coefs.csv"))
}
country_list[!country_list %in% c("KOR", "SWE")] %>%
walk(collect_coefs)
library(Rstata)
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script/"
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
library(Rstata)
path_script <- "/Users/seungwonho/Dropbox/covid_npi_analysis/script/"
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
getwd()
library(Rstata)
path_script <- getwd()
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
getwd()
library(Rstata)
path_script <- str_c(getwd(), "/script/")
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
getwd()
getwd()
library(Rstata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
getwd()
library(RStata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
getwd()
dirname(getwd())
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
getwd()
dirname(dirname(getwd()))
getwd() %>%
dirname() %>%
dirname()
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
library(RStata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp",
stata.version = 16
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
library(RStata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
path_stata <- "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp"
version_stata <- 16
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
getwd()
library(RStata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
path_master <- getwd()
path_stata <- "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp"
version_stata <- 16
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_master, "master_pt1.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Inidividual country regression
stata(
src = str_c(path_master, "/master_pt1.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Inidividual country regression
stata(
src = str_c(path_master, "/master_pt1.do"),
stata.path = path_stata,
stata.version = version_stata
)
library(RStata)
library(stringr)
path_script <- str_c(getwd(), "/script/")
path_stata <- "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp"
version_stata <- 16
# Initial data processing for the additional 5 countries (England, Germany, Netherlands, Spain, Sweden)
source(str_c(path_script, "npi_processing.R"))
# Inidividual country regression
stata(
src = str_c(path_script, "master_pt1.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Get the comparison countries paired with the reference countries (SWE, KOR)
source(str_c(path_script, "pairing_countries.R"))
# Paired regression
stata(
src = str_c(path_script, "master_pt2.do"),
stata.path = path_stata,
stata.version = version_stata
)
# Collect regression results and plot
source(str_c(path_script, "npi_figures.R"))
